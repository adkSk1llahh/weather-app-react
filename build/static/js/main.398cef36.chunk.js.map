{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","date","String","window","Date","slice","dateBuilder","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEMA,EACC,mCADDA,EAEE,2CAqEOC,MAlEf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OACE,qBAAKC,UACoB,oBAAfF,EAAQG,MACZH,EAAQG,KAAKC,KAAO,GACpB,WAEF,MALJ,SAME,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACGG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WAjCI,SAAAC,GACE,UAAZA,EAAIC,KACLC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA8Ba,oBAAhBlB,EAAQG,KACf,gCACI,sBAAKD,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,WACvD,qBAAKrB,UAAU,OAAf,SA7BQ,WAClB,IAAIsB,EAAOC,OAAO,IAAIC,OAAOC,MAE7B,OADAH,EAAOA,EAAKI,MAAM,EAAE,IA2BaC,QAGzB,sBAAK3B,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACG4B,KAAKC,MAAM/B,EAAQG,KAAKC,MAD3B,QAIA,qBAAKF,UAAU,UAAf,SACGF,EAAQA,QAAQ,GAAGG,aAIvB,SC9Db6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.398cef36.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\nconst api = {\n  key: \"1bb1a0d44d9627a2e6a71821ffc14eb1\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({})\n\n  const search = evt =>{\n    if(evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        setQuery(\"\");\n        console.log(result);\n      })\n    }\n  }\n\n  const dateBuilder = () =>{\n    let date = String(new window.Date())\n    date = date.slice(3,15)\n    return date\n  }\n\n  return (\n    <div className={\n      (typeof weather.main !=\"undefined\") \n      ? ((weather.main.temp > 16) \n        ? 'app warm' \n        : 'app') \n      : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input \n             type=\"text\"\n             className=\"search-bar\"\n             placeholder=\"search...\" \n             onChange={e => setQuery(e.target.value)}\n             value={query}\n             onKeyPress={search}\n             />\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n              <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder()}</div>\n            </div>\n\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)} C\n              </div>\n\n              <div className=\"weather\">\n                {weather.weather[0].main}\n              </div>\n            </div>\n          </div>\n        ) : (\"\")}\n\n\n      </main>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}